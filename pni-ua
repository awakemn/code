<!DOCTYPE html>
<html>
<head>
  <style>
    /* Center the buttons horizontally */
    .buttons {
      display: flex;
      justify-content: center;
      align-items: flex-start;
    }

    /* Style the buttons */
    .button {
      background-color: #4CAF50;
      color: white;
      padding: 16px 32px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 4px 2px;
      cursor: pointer;
    }

		    /* Style the buttons Home */
    .buttonhome {
      background-color: red;
      color: white;
      padding: 16px 32px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 4px 2px;
      cursor: pointer;
    }

			    /* Style the buttons Tools */
    .buttontools {
      background-color: black;
      color: white;
      padding: 16px 32px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 4px 2px;
      cursor: pointer;
    }
	

  </style>
  <div class="buttons">
    <a href="http://176.122.99.82/mplsl2t.html" class="button">Back</a>
    <a href="http://176.122.99.82/config.html" class="button">Config</a>
	<a href="http://176.122.99.82/isis.html" class="buttontools">Net Tools</a>
  	<a href="http://176.122.99.82/home.html" class="buttonhome">Home</a>
  </div>
  <title>PNI UA Generator JunOS</title>
  <script>
    function updateText() {
  var inputElements = [
    document.getElementById("peername"),
	document.getElementById("location"),
	document.getElementById("int"),
	document.getElementById("vlanid"),
	document.getElementById("peerasn"),
	document.getElementById("peercommunity"),
	document.getElementById("ouripmask"),
	document.getElementById("peerip"),
	document.getElementById("prefixlimit"),
	document.getElementById("prefixlistfilter"),
	document.getElementById("localpref"),
  ];

  // check if any of the input elements are empty
  for (var i = 0; i < inputElements.length; i++) {
    if (!inputElements[i].value) {
      alert("Please fill in all fields before generating the configuration.");
      return;
    }
  }
		 var peername = document.getElementById("peername").value;
		 var location = document.getElementById("location").value;
		 var int = document.getElementById("int").value;
		 var vlanid = document.getElementById("vlanid").value;
		 var peerasn = document.getElementById("peerasn").value;
		 var peercommunity = document.getElementById("peercommunity").value;
		 var ouripmask = document.getElementById("ouripmask").value;
		 var peerip = document.getElementById("peerip").value;
		 var prefix-limit = document.getElementById("prefixlimit").value;
		 var prefixlistfilter = document.getElementById("prefixlistfilter").value;
		 var localpref = document.getElementById("localpref").value;

      var baseText = `set logical-systems ua interfaces {int} unit {vlanid} description {peername}-PRNG-V{vlanid}
set logical-systems ua interfaces {int} unit {vlanid} vlan-id {vlanid}
set logical-systems ua interfaces {int} unit {vlanid} family inet mtu 1500
set logical-systems ua interfaces {int} unit {vlanid} family inet address {ouripmask}
set logical-systems ua protocols bgp group {peername}-PRNG import UA:UPLINK-UA-IN
set logical-systems ua protocols bgp group {peername}-PRNG import UA:{peername}-PRNG-{location}-IN
set logical-systems ua protocols bgp group {peername}-PRNG export UA:{peername}-PRNG-{location}-OUT-FILTERS
set logical-systems ua protocols bgp group {peername}-PRNG export UA:{peername}-PRNG-{location}-OUT-ATTRS
set logical-systems ua protocols bgp group {peername}-PRNG peer-as {peerasn}
set logical-systems ua protocols bgp group {peername}-PRNG neighbor {peerip} description "{peername} Peering AS{peerasn} V{vlanid}"
set logical-systems ua protocols bgp group {peername}-PRNG neighbor {peerip} family inet unicast prefix-limit maximum {prefixlimit}
set logical-systems ua protocols bgp group {peername}-PRNG neighbor {peerip} family inet unicast prefix-limit teardown 90
set logical-systems ua protocols bgp group {peername}-PRNG neighbor {peerip} family inet unicast prefix-limit teardown idle-timeout 5
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term inet-longer24 from family inet
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term inet-longer24 from route-filter 0.0.0.0/0 prefix-length-range /25-/32
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term inet-longer24 then reject
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term inet6-longer48 from family inet6
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term inet6-longer48 from route-filter ::/0 prefix-length-range /49-/128
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term inet6-longer48 then reject
deactivate logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term inet6-longer48
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept from family inet
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept from prefix-list {prefixlistfilter}
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept then local-preference {localpref}
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept then community set {peername}-PRNG-UA-{location}-IN
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept then accept
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept-6 from family inet6
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept-6 from prefix-list {prefixlistfilter}-6
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept-6 then local-preference {local pref}
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept-6 then community set {peername}-PRNG-UA-{location}-IN
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept-6 then accept
deactivate logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term accept-6
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-IN term reject then reject
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-ATTRS term utg-nets from community UTG-ALL-NETS
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-ATTRS term utg-nets then metric 0
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-ATTRS term utg-nets then community delete ANY
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-ATTRS term utg-nets then accept
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-ATTRS term non-utg-nets then metric 0
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-ATTRS term non-utg-nets then community delete ANY
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-ATTRS term non-utg-nets then accept
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no from community EXTERNAL
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no from community OUT-ALL-NO
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no from community OUT-ALL-{location}-NO
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no from community OUT-UA-NO
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no from community OUT-UA-{location}-NO
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no from community OUT-{peername}-PRNG-{location}-NO-AS
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no from community OUT-{peername}-PRNG-{location}-NO-COMM
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no then reject
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend1 from community OUT-{peername}-PRNG-PR1-AS
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend1 from community OUT-{peername}-PRNG-PR1-COMM
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend1 then as-path-prepend 50581
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend1 then next policy
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend2 from community OUT-{peername}-PRNG-PR2-AS
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend2 from community OUT-{peername}-PRNG-PR2-COMM
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend2 then as-path-prepend "50581 50581"
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend2 then next policy
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend3 from community OUT-{peername}-PRNG-PR3-AS
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend3 from community OUT-{peername}-PRNG-PR3-COMM
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend3 then as-path-prepend "50581 50581 50581"
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend3 then next policy
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend6 from community OUT-{peername}-PRNG-PR6-AS
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend6 from community OUT-{peername}-PRNG-PR6-COMM
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend6 then as-path-prepend "50581 50581 50581 50581 50581 50581"
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend6 then next policy
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend1-ua from community OUT-ALL-PR1
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend1-ua from community OUT-UA-PR1
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend1-ua from community OUT-ALL-{location}-PR1
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend1-ua from community OUT-UA-{location}-PR1
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend1-ua then as-path-prepend 50581
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend1-ua then next policy
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend2-ua from community OUT-ALL-PR2
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend2-ua from community OUT-UA-PR2
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend2-ua from community OUT-ALL-{location}-PR2
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend2-ua from community OUT-UA-{location}-PR2
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend2-ua then as-path-prepend "50581 50581"
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend2-ua then next policy
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend3-ua from community OUT-ALL-PR3
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend3-ua from community OUT-UA-PR3
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend3-ua from community OUT-ALL-{location}-PR3
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend3-ua from community OUT-UA-{location}-PR3
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend3-ua then as-path-prepend "50581 50581 50581"
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend3-ua then next policy
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend6-ua from community OUT-ALL-PR6
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend6-ua from community OUT-UA-PR6
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend6-ua from community OUT-ALL-{location}-PR6
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend6-ua from community OUT-UA-{location}-PR6
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend6-ua then as-path-prepend "50581 50581 50581 50581 50581 50581"
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term prepend6-ua then next policy
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no-prepends from community OUT-ALL-NOPR
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no-prepends from community OUT-UA-NOPR
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no-prepends from community OUT-ALL-{location}-NOPR
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no-prepends from community OUT-UA-{location}-NOPR
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term no-prepends then next policy
set logical-systems ua policy-options policy-statement UA:{peername}-PRNG-{location}-OUT-FILTERS term reject-others then reject
set logical-systems ua policy-options community {peername}-PRNG-UA-{location}-IN members 50581:65099
set logical-systems ua policy-options community {peername}-PRNG-UA-{location}-IN members 50581:65111
set logical-systems ua policy-options community {peername}-PRNG-UA-{location}-IN members 50581:{peercommunity}
set logical-systems ua policy-options community {peername}-PRNG-UA-{location}-IN members 50581:65511
set logical-systems ua policy-options community OUT-{peername}-PRNG-PR1-AS members 65001:{peerasn}
set logical-systems ua policy-options community OUT-{peername}-PRNG-PR1-COMM members {peercommunity}:1
set logical-systems ua policy-options community OUT-{peername}-PRNG-PR2-AS members 65002:{peerasn}
set logical-systems ua policy-options community OUT-{peername}-PRNG-PR2-COMM members {peercommunity}:2
set logical-systems ua policy-options community OUT-{peername}-PRNG-PR3-AS members 65003:{peerasn}
set logical-systems ua policy-options community OUT-{peername}-PRNG-PR3-COMM members {peercommunity}:3
set logical-systems ua policy-options community OUT-{peername}-PRNG-PR6-AS members 65006:{peerasn}
set logical-systems ua policy-options community OUT-{peername}-PRNG-PR6-COMM members {peercommunity}:6
set logical-systems ua policy-options community OUT-{peername}-PRNG-{location}-NO-AS members 65000:{peerasn}
set logical-systems ua policy-options community OUT-{peername}-PRNG-{location}-NO-COMM members {peercommunity}:0
set logical-systems ua policy-options community OUT-{peername}-PRNG-{location}-NOPR-AS members 65009:{peerasn}
set logical-systems ua policy-options community OUT-{peername}-PRNG-{location}-NOPR-COMM members {peercommunity}:9`;

      var result = baseText
			.replace(/{peername}/g, peername)
			.replace(/{peerasn}/g, peerasn)
			.replace(/{vlanid}/g, vlanid)
			.replace(/{int}/g, int)
			.replace(/{location}/g, location)
			.replace(/{peercommunity}/g, peercommunity)
			.replace(/{ouripmask}/g, ouripmask)
			.replace(/{peerip}/g, peerip)
			.replace(/{localpref}/g, localpref)
			.replace(/{prefixlistfilter}/g, prefixlistfilter)
			.replace(/{prefixlimit}/g, prefixlimit);

        var resultDiv = document.getElementById("result-pre");
        resultDiv.innerHTML = "";
        var lines = result.split("\n");
        lines.forEach(function(line) {
            var lineDiv = document.createElement("div");
            lineDiv.textContent = line;
            resultDiv.appendChild(lineDiv);
			
				});
			  }
</script>
	<style>
  
      #result-pre {
          font-family: monospace;
          white-space: pre-wrap;
          padding: 10px;
          background-color: #f2f2f2;
          border: 1px solid #ccc;
      }
	</style>
</head>
			<body>
			<div style="padding: 50px;">
			  <h1>Juniper PNI UA Generator</h1>
			  <form>
			<div style="display: flex; align-items: center;">
			  <label for="peername" style="flex: 0 0 100px;">Peer name: </label>
			  <input type="text" id="peername" name="peername">
			</div>
			<code>
				Enter the peer name, example: TRIOLAN<br>
			<br>
			<br>
			</code>
			<div style="display: flex; align-items: center;">
			  <label for="vlanid" style="flex: 0 0 100px;">VLAN ID: </label>
			  <input type="text" id="vlanid" name="vlanid">
			</div>
			<code>
					Enter only vlan id, example: 1337<br>
			<br>
			<br>
			</code>
			<div style="display: flex; align-items: center;">
			  <label for="int" style="flex: 0 0 100px;">interface: </label>
			  <input type="text" id="int" name="int">
			</div>
			<code>
					Enter interface name, example: ae7<br>
			<br>
			<br>
			</code>
			<div style="display: flex; align-items: center;">
			  <label for="location" style="flex: 0 0 100px;">Location: </label>
			  <input type="text" id="location" name="location">
			</div>
			<code>
		Enter the location description, example: LVV<br>
			<br>
			<br>
			</code>
			<div style="display: flex; align-items: center;">
			  <label for="peerasn" style="flex: 0 0 100px;">Peer ASN: </label>
			  <input type="text" id="peerasn" name="peerasn">
			</div>
			<code>
					Enter only peer AS number, without "AS". For example: 50581<br>
			<br>
			<br>
			</code>
			<div style="display: flex; align-items: center;">
			  <label for="peercommunity" style="flex: 0 0 100px;">Peer community: </label>
			  <input type="text" id="peercommunity" name="peercommunity">	
			</div>
			<code>
					Enter only peer community, example: 65009<br>
			<br>
			<br>
			</code>
				<div style="display: flex; align-items: center;">
			  <label for="ouripmask" style="flex: 0 0 100px;">IP/MASK our side: </label>
			  <input type="text" id="ouripmask" name="ouripmask">	
			</div>
			<code>
					Enter only ip/mask our side, example: 99.181.126.244/31<br>
			<br>
			<br>
			</code>
					<div style="display: flex; align-items: center;">
			  <label for="peerip" style="flex: 0 0 100px;">IP neighboor: </label>
			  <input type="text" id="peerip" name="peerip">	
			</div>
			<code>
					Enter only peer address, example: 99.181.126.245<br>
			<br>
			<br>
			</code>
						<div style="display: flex; align-items: center;">
			  <label for="localpref" style="flex: 0 0 100px;">Local preference: </label>
			  <input type="text" id="localpref" name="localpref">	
			</div>
			<code>
					Enter local-preference value, example: 100<br>
			<br>
			<br>
			</code>
							<div style="display: flex; align-items: center;">
			  <label for="prefixlistfilter" style="flex: 0 0 100px;">Prefix-list-filter: </label>
			  <input type="text" id="prefixlistfilter" name="prefixlistfilter">	
			</div>
			<code>
					Enter AS-SET, example: CUSTOMER-IN<br>
			<br>
			<br>
			</code>
			<div style="display: flex; align-items: center;">
			  <label for="prefixlimit" style="flex: 0 0 100px;">Prefix-limit: </label>
			  <input type="text" id="prefixlimit" name="prefixlimit">	
			</div>
			<code>
					Enter prefix-limit, example: 1000<br>
			<br>
			<br>
			</code>
		<br>
			 <div style="display: flex; align-items: center;">
			  <input type="button" value="Generate Configuration" onclick="updateText()" 
			  style="background-color: black; color: white; font-weight: bold; width: 200px; height: 50px; font-family: montserrat;">
			  <input type="reset" value="Reset"
			  style="background-color: red; color: white; font-weight: bold; width: 100px; height: 50px; font-family: montserrat;">
			</div>
			</form>
			<div>
		  <pre id="result-pre"></pre>
			<div style="display: flex; align-items: center;">
			<input type="button" value="Copy" class="copy-button" onclick="copyToClipboard()">
		  </div>
		  </div>
		<div>

		  <script>
		  function copyToClipboard() {
			var resultDiv = document.getElementById("result-pre");
			var text = resultDiv.innerText;
			var textArea = document.createElement("textarea");
			textArea.value = text;
			document.body.appendChild(textArea);
			textArea.select();
			document.execCommand("Copy");
			textArea.remove();
			alert("Copied the text: " + text);
		}
		  </script>
		  <script>
				document.getElementById('peername').addEventListener('input', checkInputs);
				document.getElementById('peerasn').addEventListener('input', checkInputs);
				document.getElementById('vlanid').addEventListener('input', checkInputs);
				document.getElementById('int').addEventListener('input', checkInputs);
				document.getElementById('location').addEventListener('input', checkInputs);
				document.getElementById('peercommunity').addEventListener('input', checkInputs);
				document.getElementById('ouripmask').addEventListener('input', checkInputs);
				document.getElementById('peerip').addEventListener('input', checkInputs);
				document.getElementById('localpref').addEventListener('input', checkInputs);
				document.getElementById('prefixlistfilter').addEventListener('input', checkInputs);
				document.getElementById('prefixlimit').addEventListener('input', checkInputs);


				function checkInputs() {
					var input1 = document.getElementById('peername').value;
					var input2 = document.getElementById('peerasn').value;
					var input3 = document.getElementById('vlanid').value;
					var input4 = document.getElementById('int').value;
					var input5 = document.getElementById('location').value;
					var input6 = document.getElementById('peercommunity').value;
					var input7 = document.getElementById('ouripmask').value;
					var input8 = document.getElementById('peerip').value;
					var input9 = document.getElementById('localpref').value;
					var input10 = document.getElementById('prefixlistfilter').value;
					var input11 = document.getElementById('prefixlimit').value;
					var updateButton = document.getElementById('updateButton');
					if (input1 !== "" && input2 !== "" && input3 !== "") {
						updateButton.disabled = false;
					} else {
						updateButton.disabled = true;
					}
				}

		  </script>
			</div>
			</body>
	<div style="text-align: center; position: absolute; bottom: 10; width: 100%;">
		<p>UTG NetToolbox</p>
	</div>
</html>

